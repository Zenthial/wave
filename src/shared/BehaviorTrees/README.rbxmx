<roblox version="4">
  <Item class="LocalScript" referent="0">
    <Properties>
      <string name="Name">README</string>
      <BinaryString name="AttributesSerialize">
      </BinaryString>
      <bool name="Disabled">false</bool>
      <Content name="LinkedSource">
        <null>
        </null>
      </Content>
      <BinaryString name="ScriptGuid"><![CDATA[ezJGRkM5MTdGLTBBREItNEEyQy1BOTQxLTFCNTU4OTJFMkVBMH0=]]></BinaryString>
      <string name="Source">--[[
	BTrees by tyridge77, UI by bizbot19
	

	NOTICE: THIS MODULE IS NOT MADE TO TEACH ANYONE HOW TO USE BEHAVIOR TREES
	
	IF YOU DO NOT KNOW HOW TO USE THEM, HERE IS A USEFUL LINK TO LEARN
	
	https://www.gamasutra.com/blogs/ChrisSimpson/20140717/221339/Behavior_trees_for_AI_How_they_work.php
	
	
	
	BEHAVIOR TREES FOLDER
	
	When you load this plugin, the BehaviorTrees folder will be instanced in the ReplicatedStorage.
	
	This is where all of your trees are stored, as well as the TreeCreator module which you'll use to load trees in game.
	
	You can move BehaviorTrees anywhere(if you don't want it in ReplicatedStorage). 
	
	Don't ever mess with the descendants unless you're selecting, naming, or deleting a tree under BehaviorTrees.Trees
	
	
	CREATING A TREE
	
	To create a new tree, click the create button on your plugin toolbar.
	This will open a new tree under BehaviorTrees.Trees. 
		
	
	EXITING A TREE
	
	You can exit the tree editor by closing it from the toolbar, the editor, or by deselecting the tree folder.
	
	
	EDITING A TREE
	
	To edit another tree, simply select it under BehaviorTrees.Trees
	
	
	EDITOR TIPS
	
	Open Help to select Keybinds for Deletion and Duplication
	
	SpaceBar = Quick Insert
	
	Mouse Wheel = Zoom In/Out
	
	
	EDITING TASKS
	
	You can create task nodes - which handle your core logic.
	
	After creating a task node, click the edit button beneath the node to open the module script.
	
	This module script contains the start, finish, and run methods you'll use to create your logic.
	
	USING THE TREE
	
	To create and use a tree for a specific object, simply require BehaviorTrees.TreeCreator and Create a tree like such:
	
	local TreeCreator = require(BehaviorTrees.TreeCreator)
	local NewTree = TreeCreator:Create(object,"MyTree1")
	NewTree:run()
	
--]]</string>
      <int64 name="SourceAssetId">-1</int64>
      <BinaryString name="Tags"></BinaryString>
    </Properties>
  </Item>
</roblox>